
<style lang="scss">
    
    .carousel_wrap{

        width: 100%;
        height: 422rpx;
        swiper{
            
        }

       .slide_image{
            width: 100%;
            height: 100%;
        }

    }
    


</style>

<template>
    
    <!-- 
        调用时传入配置对象
            imgUrls 类型数组 存放图片地址
            autoplay 类型bol 默认true
            interval 自动切换时间间隔 默认2000
            duration 运动时间 默认 500
            loop 循环滚动 默认true
            dots 指示点 默认false
            dotsColor 指示点颜色
            dotsActiveColor 当前指点颜色
            mode 图片裁切方式
     -->
    <view class="carousel_wrap">
        
        <swiper 
            class="carousel_wrap"
            indicator-dots="{{carouselConfig.dots}}" 
            autoplay="{{carouselConfig.autoplay}}" 
            interval="{{carouselConfig.interval}}" 
            duration="{{carouselConfig.duration}}"
            circular="{{carouselConfig.loop}}"
            indicator-color="{{carouselConfig.dotsColor}}"
            indicator-active-color="{{carouselConfig.dotsActiveColor}}"
        >
        
            <block wx:for="{{carouselConfig.imgUrls}}" wx:key="{{carouselConfig.index}}">

                <swiper-item>
                    <image src="{{item}}" mode="{{carouselConfig.center}}" class="slide_image" />
                </swiper-item>
                
            </block>

        </swiper>

    </view>

</template>

<script>

    import wepy from 'wepy'

    export default class Carousel extends wepy.component{
        data = {
            currentDot: 0,
            carousel: null
        }
        props = {
            carouselConfig: {
                type: Object,
                coerce: function (res){
                    if(!res.mode) res.mode = 'center'
                    if(!res.dots) res.dots = true
                    if(!res.loop) res.loop = true
                    if(!res.autoplay) res.autoplay = true
                    if(!res.interval) res.interval = 2000
                    if(!res.duration) res.duration = 500
                    return res
                },
                default: {}
            }
        }
        onLoad(){
            
        }

    }

</script>
